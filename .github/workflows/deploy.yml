name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

      - name: SSH Key Bypass
        run: |
          echo -e "Host *\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

      - name: Deploy to Droplet
        env:
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          ssh $SSH_USER@$DROPLET_IP << 'EOF'
            # Update and upgrade the system
            sudo apt update
            sudo apt upgrade -y

            # Install PHP 8.2
            sudo add-apt-repository ppa:ondrej/php -y
            sudo apt update
            sudo apt install php8.2 php8.2-cli php8.2-fpm php8.2-pgsql php8.2-mbstring php8.2-xml php8.2-curl php8.2-zip php8.2-intl -y

            # Install Composer
            curl -sS https://getcomposer.org/installer | php
            sudo mv composer.phar /usr/local/bin/composer

            # Install PostgreSQL 16.3
            sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
            wget -qO - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            sudo apt update
            sudo apt install postgresql-16 -y

            # Setup PostgreSQL
            # sudo -i -u postgres psql -c "CREATE USER your_username WITH PASSWORD 'your_password';"
            # sudo -i -u postgres psql -c "ALTER USER your_username WITH SUPERUSER;"
            # sudo -i -u postgres psql -c "CREATE DATABASE your_database_name;"
            # sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE your_database_name TO your_username;"

            sudo -i -u postgres psql -c "CREATE USER betnwin_user WITH PASSWORD 'sivA898S';"
            sudo -i -u postgres psql -c "ALTER USER betnwin_user WITH SUPERUSER;"
            sudo -i -u postgres psql -c "CREATE DATABASE betnwin_db;"
            sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE betnwin_db TO betnwin_user;"

            # Install Laravel 11
            cd /var/www/
            composer create-project --prefer-dist laravel/laravel betnwin_pro "11.*"
            sudo chown -R $USER:$USER /var/www/betnwin_pro

            # Install Laravel 11
            # sudo mkdir -p /var/www/betnwin_pro
            # sudo chown -R $USER:$USER /var/www/betnwin_pro
            # cd /var/www/betnwin_pro
            # composer create-project --prefer-dist laravel/laravel betnwin_pro "11.*"

            # Set permissions
            sudo chown -R www-data:www-data /var/www/betnwin_pro
            sudo chmod -R 755 /var/www/betnwin_pro

            # Install Nginx
            sudo apt install nginx -y

            # Create Nginx configuration file
            sudo bash -c 'cat <<EOF > /etc/nginx/sites-available/betnwin_pro
            server {
                listen 80;
                server_name 209.38.20.233;
            
                root /var/www/betnwin_pro/public;
                index index.php index.html index.htm;
            
                location / {
                    try_files \$uri \$uri/ /index.php?\$query_string;
                }
            
                location ~ \.php$ {
                    include snippets/fastcgi-php.conf;
                    fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
                }
            
                location ~ /\.ht {
                    deny all;
                }
            }
            EOF'


            # Enable the Nginx site configuration
            sudo ln -s /etc/nginx/sites-available/betnwin_pro /etc/nginx/sites-enabled/

            # Test and restart Nginx
            sudo nginx -t
            sudo systemctl restart nginx

            # Configure Laravel to use PostgreSQL
            sudo bash -c 'cat > /var/www/betnwin_pro/.env <<EOL
            DB_CONNECTION=pgsql
            DB_HOST=127.0.0.1
            DB_PORT=5432
            DB_DATABASE=betnwin_db
            DB_USERNAME=betnwin_user
            DB_PASSWORD=sivA898S
            EOL'

            # Generate application key and run migrations
            cd /var/www/betnwin_pro
            php artisan key:generate
            php artisan migrate
          EOF
